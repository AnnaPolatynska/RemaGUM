<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABFAIQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KK+R7j9tTxh8QvG3iPwj8I/hZN4l1PQ7h7a7vdV1GK2giK
        uybiuRlSUbHzg8dK1hTlUvy9CJTUNz64qjrGu6b4esnvNV1C10y0Tlp7yZYox9WYgVw3wNk+J9x4bv5/
        ipFottrU14XtbXQyxigt9iYViSctu39zwRzX5+/se/AHS/2vL7xjrXxK8Q+I9am0e6hiijbUSwkEgkJ3
        s4ZuNgxtI6mtYUU1KUpaRttruZyqNWUVqz7fm/bI+ETeMtI8Laf4uttb1rVL2Kwt4dJRriPzJHCLmVR5
        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
</value>
  </data>
</root>